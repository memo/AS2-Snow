/***********************************************************************Copyright (c) 2008, Memo Akten, www.memo.tvThis program is free software: you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program.  If not, see <http://www.gnu.org/licenses/>.	***********************************************************************/	class SnowField {	private var mc:MovieClip;		public function SnowField(w:Number, h:Number, root:MovieClip, numSnow:Number) {		mc = root.createEmptyMovieClip("snowfield_movieclip", root.getNextHighestDepth());		mc.maxWidth = w;		mc.maxHeight = h;		mc.snow = new Array();		mc.numSnow = numSnow;		mc.xmouseOld = mc._xmouse;		mc.ymouseOld = mc._ymouse;				for(var i=0; i<numSnow; i++) {		// create all snowflakes			var snowflake:MovieClip = mc.attachMovie("SnowFlake", "snowflake"+i, mc.getNextHighestDepth());			snowflake._x =Math.random() * mc.maxWidth;			snowflake._y = Math.random() * mc.maxHeight;			snowflake._xscale = snowflake._yscale = Math.random() * 50 + 50;				snowflake._alpha = Math.random() * snowflake._xscale * 0.8 + 20;		//smaller ones are faded away						snowflake.vx = (Math.random() - 0.5) * 2.0;			snowflake.vy = Math.random() * 2 + 0.5;			snowflake.ax = 0;			snowflake.ay = 0;						var distf:Number = snowflake._xscale / 100;			snowflake.vy *= distf;		// make further away ones move slower;			snowflake.vx *= distf;				mc.snow.push(snowflake);			}		mc.onEnterFrame = onEnterFrame_Snow;	}		public function getMovieClip():MovieClip {		return mc;	}			function onEnterFrame_Snow() {		// update all snowflakes		with(this) {			var mouseVelX:Number = _xmouse - xmouseOld;			var mouseVelY:Number = _ymouse - ymouseOld;			var maxSpeed:Number = 10;			for(var i=0; i<numSnow; i++) {				with(snow[i]) {					_x += vx;					_y += vy;										d2 = (_parent._xmouse - _x) * (_parent._xmouse - _x) + (_parent._ymouse - _y) * (_parent._ymouse - _y);					d2 = 50 / (d2 + 1);					ax += mouseVelX * d2;					ay += mouseVelY * d2;					if(ax>maxSpeed) ax = maxSpeed; else if(ax<-maxSpeed) ax = -maxSpeed;					if(ay>maxSpeed) ay = maxSpeed; else if(ay<-maxSpeed) ay = -maxSpeed;					_x += ax;					_y += ay;										ax *= 0.9;					ay *= 0.9;										if(_y>maxHeight + _height) { _y = -_height; ax = ay = 0; }					if(_x>maxWidth + _width) { _x = -_width; ax = ay = 0; }					else if (_x< -_width) { _x = maxWidth + _width; ax = ay = 0; }				}			}			xmouseOld = _xmouse;			ymouseOld = _ymouse;		}	}}	